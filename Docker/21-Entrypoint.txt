Comandos:
$ docker build -t ping . (construyo la imagen)
$ docker run --name pinger ping <hostname> (ahora le puedo pasar un parámetro, previamente tengo que agregar el ENTRYPOINT en el Dockerfile)



FROM ubuntu:trusty
ENTRYPOINT [ "/bin/ping", "-c", "3"]
CMD ["localhost"]

Contenedores ejecutables: ENTRYPOINT vs CMD
Vamos a images/docker/avanzado/ping
En docker podemos construir images apartir de un archivo llamado dockerfile
El archivo nos permite ejecutar un comando que se ejecutara una vez inicie nuestro contenedor

¿Qué ocurre al definir un CMD sin definir un ENTRYPOINT?
Si sólo especificas un CMD, entonces Docker ejecutará dicho comando usando el ENTRYPOINT por defecto, que es /bin/sh -c.

Respecto al “entrypoint” (punto de entrada) y “cmd” (comando), puedes sobreescribir ninguno, ambos, o sólo uno de ellos.

Si especificas ambos, entonces:

El ENTRYPOINT especifica el ejecutable que usará el contenedor,
y CMD se corresponde con los parámetros a usar con dicho ejecutable.
Ejemplo sin entrypoint
Al no contener el entrypoint toma /bin/ping y toma como parametros los demás elementos "-c", "3", "localhost", sin embargo el argumento localhost es fijo por lo que no podemos hacer ping a otros destinos

  FROM ubuntu:trusty
  CMD ["/bin/ping", "-c", "3", "localhost"]

Ejemplo con entrypoint y cmd
Al usar entry point toma el ejecutable /bin/ping como aplicación de entrada y lo que esta en CMD ["localhost"] de puede cambiar por lo que podemos hacer ping a diferentes destinos

  FROM ubuntu:trusty
  ENTRYPOINT ["/bin/ping", "-c", "3"]
  CMD ["localhost"]
Ping a localhost

docker run --name pinger ping
Ping a cualquier otro host

docker run --name pinger ping google.com